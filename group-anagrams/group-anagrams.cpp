class Solution {\u000Apublic:\u000A    vector\u003Cvector\u003Cstring\u003E\u003E groupAnagrams(vector\u003Cstring\u003E\u0026 strs) {\u000A        \u000A        \u000A        \u000A        vector \u003C pair\u003C string, string \u003E  \u003Epaired_string\u003B\u000A        \u000A        for( int i \u003D 0\u003Bi\u003C strs.size() \u003Bi++){\u000A            paired_string.push_back(make_pair(strs[i], strs[i]))\u003B\u000A            sort(paired_string[i].first.begin(),paired_string[i].first.end())\u003B\u000A        } \u000A        \u000A        sort(paired_string.begin(),paired_string.end())\u003B\u000A        \u000A        vector\u003Cvector\u003Cstring\u003E\u003E ans\u003B\u000A        \u000A        if(strs.size()\u003D\u003D0)return ans\u003B\u000A        int l \u003D 0\u003B\u000A        vector \u003Cstring \u003E res\u003B\u000A         res.push_back(paired_string[0].second)\u003B\u000A        for(int i \u003D1\u003B i\u003Cpaired_string.size()\u003Bi++){\u000A            if(paired_string[i].first \u003D\u003D paired_string[i\u002D1].first){\u000A                res.push_back(paired_string[i].second)\u003B\u000A            }\u000A            else {\u000A                ans.push_back(res)\u003B\u000A                res.clear()\u003B\u000A                res.push_back(paired_string[i].second)\u003B\u000A            }\u000A        }\u000A        ans.push_back(res)\u003B\u000A        return ans\u003B\u000A        \u000A    }\u000A}\u003B